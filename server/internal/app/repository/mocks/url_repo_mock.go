// Code generated by MockGen. DO NOT EDIT.
// Source: url_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	repository "pr1/server/internal/app/repository"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlRepo is a mock of UrlRepo interface.
type MockUrlRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRepoMockRecorder
}

// MockUrlRepoMockRecorder is the mock recorder for MockUrlRepo.
type MockUrlRepoMockRecorder struct {
	mock *MockUrlRepo
}

// NewMockUrlRepo creates a new mock instance.
func NewMockUrlRepo(ctrl *gomock.Controller) *MockUrlRepo {
	mock := &MockUrlRepo{ctrl: ctrl}
	mock.recorder = &MockUrlRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlRepo) EXPECT() *MockUrlRepoMockRecorder {
	return m.recorder
}

// CreateShortenUrl mocks base method.
func (m *MockUrlRepo) CreateShortenUrl(ctx context.Context, url *repository.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShortenUrl", ctx, url)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateShortenUrl indicates an expected call of CreateShortenUrl.
func (mr *MockUrlRepoMockRecorder) CreateShortenUrl(ctx, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShortenUrl", reflect.TypeOf((*MockUrlRepo)(nil).CreateShortenUrl), ctx, url)
}

// DeleteShortenUrl mocks base method.
func (m *MockUrlRepo) DeleteShortenUrl(ctx context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShortenUrl", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShortenUrl indicates an expected call of DeleteShortenUrl.
func (mr *MockUrlRepoMockRecorder) DeleteShortenUrl(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShortenUrl", reflect.TypeOf((*MockUrlRepo)(nil).DeleteShortenUrl), ctx, token)
}

// GetUrl mocks base method.
func (m *MockUrlRepo) GetUrl(ctx context.Context, token string) (*repository.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", ctx, token)
	ret0, _ := ret[0].(*repository.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockUrlRepoMockRecorder) GetUrl(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockUrlRepo)(nil).GetUrl), ctx, token)
}
